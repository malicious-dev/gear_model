import { Suspense, useRef, useState } from "react"
import { useGLTF } from "@react-three/drei"
import { Select } from "@react-three/postprocessing"
import { useControls, folder } from "leva"
import * as THREE from "three"
import { useFrame } from "react-three-fiber";
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Slava Z. (https://sketchfab.com/slava)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/3d-printable-radial-pneumatic-engine-3cbddbecd6c5462391e9936a3ccd7d32
title: 3d Printable Radial Pneumatic Engine
*/

// const Models = [
//   { title: 'cylinder' },
//   { title: 'machine' },
// ]

// function Model({ url }) {
//   const { scene, nodes, materials, animations } = useGLTF(url)
//   return <Clone object={ scene } />
// }

export function Engine({ selected, ...props }) {


  // const { nodes } = useGLTF("/machine-transformed.glb")
  const group = useRef()
  const [hovered, hover] = useState()

  // const { title } = useControls({
  //   title: {
  //     options: Models?.map(({ title }) => title)
  //   }
  // })


  const machine = () => {
    const { nodes } = useGLTF("/machine-transformed.glb")
    console.log(nodes)
    const config = useControls({
      challenger: { challenger: { value: false } },
      all: { value: false },
      parts: folder(
        {
          gear: { value: false },
          shaft: { value: false },
          cylinder: { value: false },
          piston1: { value: true },
          piston2: { value: false },
          piston3: { value: false },
        },
        { collapsed: true },
      ),
    })
    return (
      <group onPointerOver={ (e) => hover(e.object.parent.name) } onPointerOut={ (e) => hover(null) } ref={ group } { ...props } dispose={ null }>
        <Select enabled={ config.all }>
          <Select name="gear" enabled={ hovered === "gear" || config.gear }>
            <mesh geometry={ nodes.mesh_0.geometry } material={ nodes.mesh_0.material } />
            <mesh geometry={ nodes.mesh_1.geometry } material={ nodes.mesh_1.material } />
            <mesh geometry={ nodes.mesh_2.geometry } material={ nodes.mesh_2.material } />
            <mesh geometry={ nodes.mesh_3.geometry } material={ nodes.mesh_3.material } />
            <mesh geometry={ nodes.mesh_4.geometry } material={ nodes.mesh_4.material } />
            <mesh geometry={ nodes.mesh_5.geometry } material={ nodes.mesh_5.material } />
            <mesh geometry={ nodes.mesh_6.geometry } material={ nodes.mesh_6.material } />
            <mesh geometry={ nodes.mesh_7.geometry } material={ nodes.mesh_7.material } />
            <mesh geometry={ nodes.mesh_8.geometry } material={ nodes.mesh_8.material } />
            <mesh geometry={ nodes.mesh_9.geometry } material={ nodes.mesh_9.material } />
            <mesh geometry={ nodes.mesh_10.geometry } material={ nodes.mesh_10.material } />
            <mesh geometry={ nodes.mesh_13.geometry } material={ nodes.mesh_13.material } />
          </Select>

          <Select name="shaft" enabled={ hovered === "shaft" || config.shaft }>
            <mesh geometry={ nodes.mesh_29.geometry } material={ nodes.mesh_29.material } />
            <mesh geometry={ nodes.mesh_30.geometry } material={ nodes.mesh_30.material } />
            <mesh geometry={ nodes.mesh_31.geometry } material={ nodes.mesh_31.material } />
            <mesh geometry={ nodes.mesh_32.geometry } material={ nodes.mesh_32.material } />
            <mesh geometry={ nodes.mesh_33.geometry } material={ nodes.mesh_33.material } />
          </Select>

          <Select name="cylinder" enabled={ hovered === "cylinder" || config.cylinder }>
            <mesh geometry={ nodes.mesh_11.geometry } material={ nodes.mesh_11.material } />
            <mesh geometry={ nodes.mesh_12.geometry } material={ nodes.mesh_12.material } />
            <mesh geometry={ nodes.mesh_14.geometry } material={ nodes.mesh_14.material } />
            <mesh geometry={ nodes.mesh_19.geometry } material={ nodes.mesh_19.material } />
            <mesh geometry={ nodes.mesh_34.geometry } material={ nodes.mesh_34.material } />
            <mesh geometry={ nodes.mesh_39.geometry } material={ nodes.mesh_39.material } />
            <mesh geometry={ nodes.mesh_47.geometry } material={ nodes.mesh_47.material } />
            <mesh geometry={ nodes.mesh_52.geometry } material={ nodes.mesh_52.material } />
          </Select>

          <Select name="piston1" enabled={ hovered === "piston1" || config.piston1 }>
            <mesh geometry={ nodes.mesh_15.geometry } material={ nodes.mesh_15.material } />
            <mesh geometry={ nodes.mesh_16.geometry } material={ nodes.mesh_16.material } />
            <mesh geometry={ nodes.mesh_17.geometry } material={ nodes.mesh_17.material } />
            <mesh geometry={ nodes.mesh_18.geometry } material={ nodes.mesh_18.material } />
            <mesh geometry={ nodes.mesh_20.geometry } material={ nodes.mesh_20.material } />
            <mesh geometry={ nodes.mesh_21.geometry } material={ nodes.mesh_21.material } />
            <mesh geometry={ nodes.mesh_22.geometry } material={ nodes.mesh_22.material } />
            <mesh geometry={ nodes.mesh_23.geometry } material={ nodes.mesh_23.material } />
            <mesh geometry={ nodes.mesh_24.geometry } material={ nodes.mesh_24.material } />
            <mesh geometry={ nodes.mesh_25.geometry } material={ nodes.mesh_25.material } />
            <mesh geometry={ nodes.mesh_26.geometry } material={ nodes.mesh_26.material } />
            <mesh geometry={ nodes.mesh_27.geometry } material={ nodes.mesh_27.material } />
            <mesh geometry={ nodes.mesh_28.geometry } material={ nodes.mesh_28.material } />
          </Select>

          <Select name="piston2" enabled={ hovered === "piston2" || config.piston2 }>
            <mesh geometry={ nodes.mesh_35.geometry } material={ nodes.mesh_35.material } />
            <mesh geometry={ nodes.mesh_36.geometry } material={ nodes.mesh_36.material } />
            <mesh geometry={ nodes.mesh_37.geometry } material={ nodes.mesh_37.material } />
            <mesh geometry={ nodes.mesh_38.geometry } material={ nodes.mesh_38.material } />
            <mesh geometry={ nodes.mesh_40.geometry } material={ nodes.mesh_40.material } />
            <mesh geometry={ nodes.mesh_41.geometry } material={ nodes.mesh_41.material } />
            <mesh geometry={ nodes.mesh_42.geometry } material={ nodes.mesh_42.material } />
            <mesh geometry={ nodes.mesh_43.geometry } material={ nodes.mesh_43.material } />
            <mesh geometry={ nodes.mesh_44.geometry } material={ nodes.mesh_44.material } />
            <mesh geometry={ nodes.mesh_45.geometry } material={ nodes.mesh_45.material } />
            <mesh geometry={ nodes.mesh_46.geometry } material={ nodes.mesh_46.material } />
          </Select>

          <Select name="piston3" enabled={ hovered === "piston3" || config.piston3 }>
            <mesh geometry={ nodes.mesh_48.geometry } material={ nodes.mesh_48.material } />
            <mesh geometry={ nodes.mesh_49.geometry } material={ nodes.mesh_49.material } />
            <mesh geometry={ nodes.mesh_50.geometry } material={ nodes.mesh_50.material } />
            <mesh geometry={ nodes.mesh_51.geometry } material={ nodes.mesh_51.material } />
            <mesh geometry={ nodes.mesh_53.geometry } material={ nodes.mesh_53.material } />
            <mesh geometry={ nodes.mesh_54.geometry } material={ nodes.mesh_54.material } />
            <mesh geometry={ nodes.mesh_55.geometry } material={ nodes.mesh_55.material } />
            <mesh geometry={ nodes.mesh_56.geometry } material={ nodes.mesh_56.material } />
            <mesh geometry={ nodes.mesh_57.geometry } material={ nodes.mesh_57.material } />
            <mesh geometry={ nodes.mesh_58.geometry } material={ nodes.mesh_58.material } />
            <mesh geometry={ nodes.mesh_59.geometry } material={ nodes.mesh_59.material } />
          </Select>
        </Select>
      </group>
    )
  }

  const Challenger = () => {

    const { nodes } = useGLTF("/challenger_ii.glb")
    console.log(nodes)
    const challengerConfig = useControls({
      all: { value: false },
      parts: folder(
        {
          Barrel: { value: false },
          body: { value: false },
          M2: { value: false },
          gunwheel: { value: false },
          turret: { value: false },
          truck: { value: false },
          le_wheel: { value: false },
          gun: { value: false },
        },
        { collapsed: true },
      ),
    })

    return (
      <group onPointerOver={ (e) => hover(e.object.parent.name) } onPointerOut={ (e) => hover(null) } ref={ group } { ...props } dispose={ null }>
        <Select enabled={ challengerConfig.all }>
          { nodes &&
            <>
              <Select name="Barrel" enabled={ hovered === "Barrel" || challengerConfig?.Barrel }>
                <mesh geometry={ nodes?.Barrel?.geometry } material={ nodes?.Barrel?.material } />
                <mesh geometry={ nodes?.Root?.geometry } material={ nodes?.Root?.material } />
                <mesh geometry={ nodes?.Barrel_0?.geometry } material={ nodes?.Barrel_0?.material } />
                <mesh geometry={ nodes?.Barrel_2?.geometry } material={ nodes?.Barrel_2?.material } />
                <mesh geometry={ nodes?.Barrel_2_0?.geometry } material={ nodes?.Barrel_2_0?.material } />
              </Select>

              <Select name="body" enabled={ hovered === "body" || challengerConfig.body }>
                <mesh geometry={ nodes?.body.geometry } material={ nodes?.body.material } />
                <mesh geometry={ nodes?.body_0.geometry } material={ nodes?.body_0.material } />
                <mesh geometry={ nodes?.body_2.geometry } material={ nodes?.body_2.material } />
                <mesh geometry={ nodes?.body_2_0.geometry } material={ nodes?.body_2_0.material } />
              </Select>
              <Select name="M2" enabled={ hovered === "M2" || challengerConfig.M2 }>
                <mesh geometry={ nodes?.M2.geometry } material={ nodes?.M2.material } />
                <mesh geometry={ nodes?.M2_0.geometry } material={ nodes?.M2_0.material } />
                <mesh geometry={ nodes?.M2_add1.geometry } material={ nodes?.M2_add1.material } />
                <mesh geometry={ nodes?.M2_add1_0.geometry } material={ nodes?.M2_add1_0.material } />
                <mesh geometry={ nodes?.M2_add2.geometry } material={ nodes?.M2_add2.material } />
                <mesh geometry={ nodes?.M2_add2_0.geometry } material={ nodes?.M2_add2_0.material } />
                <mesh geometry={ nodes?.M2_bu.geometry } material={ nodes?.M2_bu.material } />
                <mesh geometry={ nodes?.M2_bu001.geometry } material={ nodes?.M2_bu001.material } />
              </Select>
              <Select name="gunwheel" enabled={ hovered === "gunwheel" || challengerConfig.gunwheel }>
                <mesh geometry={ nodes?.we_wheel.geometry } material={ nodes?.we_wheel.material } />
                <mesh geometry={ nodes?.we_wheel001.geometry } material={ nodes?.we_wheel001.material } />
                <mesh geometry={ nodes?.we_wheel001_0.geometry } material={ nodes?.we_wheel001_0.material } />
                <mesh geometry={ nodes?.we_wheel_0.geometry } material={ nodes?.we_wheel_0.material } />
              </Select>
              <Select name="le_wheel" enabled={ hovered === "le_wheel" || challengerConfig.le_wheel }>
                <mesh geometry={ nodes?.le_wheel.geometry } material={ nodes?.le_wheel.material } />
                <mesh geometry={ nodes?.le_wheel001.geometry } material={ nodes?.le_wheel001.material } />
                <mesh geometry={ nodes?.le_wheel001_0.geometry } material={ nodes?.le_wheel001_0.material } />
                <mesh geometry={ nodes?.le_wheel_0.geometry } material={ nodes?.le_wheel_0.material } />
              </Select>
              <Select name="gun" enabled={ hovered === "gun" || challengerConfig.gun }>
                <mesh geometry={ nodes?.gun.geometry } material={ nodes?.gun.material } />
                <mesh geometry={ nodes?.gun_0.geometry } material={ nodes?.gun_0.material } />
              </Select>
              <Select name="turret" enabled={ hovered === "turret" || challengerConfig.turret }>
                <mesh geometry={ nodes?.turret.geometry } material={ nodes?.turret.material } />
                <mesh geometry={ nodes?.turret_0.geometry } material={ nodes?.turret_0.material } />
                <mesh geometry={ nodes?.turret_2.geometry } material={ nodes?.turret_2.material } />
                <mesh geometry={ nodes?.turret_2_0.geometry } material={ nodes?.turret_2_0.material } />
                <mesh geometry={ nodes?.turret_2_1.geometry } material={ nodes?.turret_2_1.material } />
                <mesh geometry={ nodes?.turret_3.geometry } material={ nodes?.turret_3.material } />
                <mesh geometry={ nodes?.turret_3_0.geometry } material={ nodes?.turret_3_0.material } />
              </Select>
              <Select name="truck" enabled={ hovered === "truck" || challengerConfig.truck }>
                <mesh geometry={ nodes?.truck.geometry } material={ nodes?.truck.material } />
                <mesh geometry={ nodes?.truck001.geometry } material={ nodes?.truck001.material } />
                <mesh geometry={ nodes?.truck001_0.geometry } material={ nodes?.truck001_0.material } />
                <mesh geometry={ nodes?.truck_0.geometry } material={ nodes?.truck_0.material } />

              </Select>
            </>
          }

        </Select>
      </group>
    )
  }

  const cylinder = () => {
    const { nodes } = useGLTF("/cylinder-motor.glb")


    const config = useControls({
      challenger: { challenger: { value: false } },
      all: { value: false },
      part: folder(
        {
          Cut_Mat: { value: false },
          Yellow_Mat: { value: false },
          Dark_Mat: { value: false },
          Chrome_Mat: { value: false },
        },
        { collapsed: true },
      ),
    })
    return (
      <group onPointerOver={ (e) => hover(e.object.parent.name) } onPointerOut={ (e) => hover(null) } ref={ group } { ...props } dispose={ null }>
        <Select enabled={ config.all }>
          <Select name="Cut_Mat" enabled={ hovered === "Cut_Mat" || config.Cut_Mat }>
            {/* <mesh geometry={ nodes.polySurface1.geometry } material={ nodes.polySurface1.material } /> */ }
            <mesh geometry={ nodes.polySurface1_Cut_Mat_0.geometry } material={ nodes.polySurface1_Cut_Mat_0.material } />
            {/* <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } /> */ }
            <mesh geometry={ nodes.polySurface2_Cut_Mat_0.geometry } material={ nodes.polySurface2_Cut_Mat_0.material } />
            {/* <mesh geometry={ nodes.polySurface2_Dark_Mat_0.geometry } material={ nodes.polySurface2_Dark_Mat_0.material } /> */ }
            <mesh geometry={ nodes.polySurface3_Cut_Mat_0.geometry } material={ nodes.polySurface3_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface5_Cut_Mat_0.geometry } material={ nodes.polySurface5_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface6_Cut_Mat_0.geometry } material={ nodes.polySurface6_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface7_Cut_Mat_0.geometry } material={ nodes.polySurface7_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface8_Cut_Mat_0.geometry } material={ nodes.polySurface8_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface9_Cut_Mat_0.geometry } material={ nodes.polySurface9_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface9_Cut_Mat_0.geometry } material={ nodes.polySurface9_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface26_Cut_Mat_0.geometry } material={ nodes.polySurface26_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface27_Cut_Mat_0.geometry } material={ nodes.polySurface27_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface50_Cut_Mat_0.geometry } material={ nodes.polySurface50_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface51_Cut_Mat_0.geometry } material={ nodes.polySurface51_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface52_Cut_Mat_0.geometry } material={ nodes.polySurface52_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface53_Cut_Mat_0.geometry } material={ nodes.polySurface53_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface54_Cut_Mat_0.geometry } material={ nodes.polySurface54_Cut_Mat_0.material } />
            <mesh geometry={ nodes.polySurface55_Cut_Mat_0.geometry } material={ nodes.polySurface55_Cut_Mat_0.material } />
          </Select>
          <Select name="Yellow_Mat" enabled={ hovered === "Yellow_Mat" || config.Yellow_Mat }>
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface5_Yellow_Mat_0.geometry } material={ nodes.polySurface5_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface6_Yellow_Mat_0.geometry } material={ nodes.polySurface6_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface7_Yellow_Mat_0.geometry } material={ nodes.polySurface7_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface11_Yellow_Mat_0.geometry } material={ nodes.polySurface11_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface12_Yellow_Mat_0.geometry } material={ nodes.polySurface12_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface19_Yellow_Mat_0.geometry } material={ nodes.polySurface19_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface23_Yellow_Mat_0.geometry } material={ nodes.polySurface23_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface24_Yellow_Mat_0.geometry } material={ nodes.polySurface24_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
            <mesh geometry={ nodes.polySurface1_Yellow_Mat_0.geometry } material={ nodes.polySurface1_Yellow_Mat_0.material } />
          </Select>
          <Select name="Dark_Mat" enabled={ hovered === "Dark_Mat" || config.Dark_Mat }>pCube1_Dark_Mat_0
            <mesh geometry={ nodes.pCube1_Dark_Mat_0.geometry } material={ nodes.pCube1_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface2_Dark_Mat_0.geometry } material={ nodes.polySurface2_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface3_Dark_Mat_0.geometry } material={ nodes.polySurface3_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface4_Dark_Mat_0.geometry } material={ nodes.polySurface4_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface2_Dark_Mat_0.geometry } material={ nodes.polySurface2_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface8_Dark_Mat_0.geometry } material={ nodes.polySurface8_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface9_Dark_Mat_0.geometry } material={ nodes.polySurface9_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface10_Dark_Mat_0.geometry } material={ nodes.polySurface10_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface20_Dark_Mat_0.geometry } material={ nodes.polySurface20_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface21_Dark_Mat_0.geometry } material={ nodes.polySurface21_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface22_Dark_Mat_0.geometry } material={ nodes.polySurface22_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface26_Dark_Mat_0.geometry } material={ nodes.polySurface26_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface27_Dark_Mat_0.geometry } material={ nodes.polySurface27_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface28_Dark_Mat_0.geometry } material={ nodes.polySurface28_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface50_Dark_Mat_0.geometry } material={ nodes.polySurface50_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface51_Dark_Mat_0.geometry } material={ nodes.polySurface51_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface52_Dark_Mat_0.geometry } material={ nodes.polySurface52_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface53_Dark_Mat_0.geometry } material={ nodes.polySurface53_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface54_Dark_Mat_0.geometry } material={ nodes.polySurface54_Dark_Mat_0.material } />
            <mesh geometry={ nodes.polySurface55_Dark_Mat_0.geometry } material={ nodes.polySurface55_Dark_Mat_0.material } />

          </Select>
          <Select name="Chrome_Mat" enabled={ hovered === "Chrome_Mat" || config.Chrome_Mat }>
            <mesh geometry={ nodes.polySurface29_Chrome_Mat_0.geometry } material={ nodes.polySurface29_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface30_Chrome_Mat_0.geometry } material={ nodes.polySurface30_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface31_Chrome_Mat_0.geometry } material={ nodes.polySurface31_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface32_Chrome_Mat_0.geometry } material={ nodes.polySurface32_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface33_Chrome_Mat_0.geometry } material={ nodes.polySurface33_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface34_Chrome_Mat_0.geometry } material={ nodes.polySurface34_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface35_Chrome_Mat_0.geometry } material={ nodes.polySurface35_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface36_Chrome_Mat_0.geometry } material={ nodes.polySurface36_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface37_Chrome_Mat_0.geometry } material={ nodes.polySurface37_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface38_Chrome_Mat_0.geometry } material={ nodes.polySurface38_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface39_Chrome_Mat_0.geometry } material={ nodes.polySurface39_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface40_Chrome_Mat_0.geometry } material={ nodes.polySurface40_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface41_Chrome_Mat_0.geometry } material={ nodes.polySurface41_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface42_Chrome_Mat_0.geometry } material={ nodes.polySurface42_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface43_Chrome_Mat_0.geometry } material={ nodes.polySurface43_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface44_Chrome_Mat_0.geometry } material={ nodes.polySurface44_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface45_Chrome_Mat_0.geometry } material={ nodes.polySurface45_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface46_Chrome_Mat_0.geometry } material={ nodes.polySurface46_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface47_Chrome_Mat_0.geometry } material={ nodes.polySurface47_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface48_Chrome_Mat_0.geometry } material={ nodes.polySurface48_Chrome_Mat_0.material } />
            <mesh geometry={ nodes.polySurface49_Chrome_Mat_0.geometry } material={ nodes.polySurface49_Chrome_Mat_0.material } />


          </Select>
        </Select>
      </group>
    )
  }

  return (
    <>
      {/* { challenger() } */ }

      {
        "machine" === selected ?


          machine()
          :
          cylinder()

      }

    </>
  )


}

